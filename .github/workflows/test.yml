name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Docker images
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('docker-compose.yaml') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.yml build
      - name: Start Blockchain
        run: |
          make up
        env:
          API_PORT: 3002
          RPC_USER: bitcoin
          RPC_PASSWORD: bitcoin

      - name: Build
        run: make build

      - name: Run tests
        run: make test